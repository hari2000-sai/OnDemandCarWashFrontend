{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAI\\\\Downloads\\\\Frontend\\\\Frontend\\\\src\\\\components\\\\pages\\\\PaypalButton.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport scriptLoader from \"react-async-script-loader\";\nimport PropTypes from \"prop-types\";\n\nclass PaypalButton extends React.Component {\n  constructor(props) {\n    super(props);\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n    this.state = {\n      showButton: false,\n      env: \"sandbox\",\n      // Or 'sandbox'\n      client: {\n        sandbox: \"Af5uiiZODbLimz9utCNI3a3Fwjyll2nk527X4C1KsyhexG1SuHiGMh5fxVWTx_mj-l7lK0bFoYBizsAx\" // production: \"xxxxxxxxx\", // production client ID\n\n      },\n      commit: true // Show a 'Pay Now' button\n\n    };\n  }\n\n  componentDidMount() {\n    const {\n      isScriptLoaded,\n      isScriptLoadSucceed\n    } = this.props;\n\n    if (isScriptLoaded && isScriptLoadSucceed) {\n      this.setState({\n        showButton: true\n      });\n    }\n  }\n\n  componentWillReceiveProps(_ref) {\n    let {\n      isScriptLoaded,\n      isScriptLoadSucceed\n    } = _ref;\n\n    if (!this.state.show) {\n      if (isScriptLoaded && !this.props.isScriptLoaded) {\n        if (isScriptLoadSucceed) {\n          this.setState({\n            showButton: true\n          });\n        } else {\n          console.log(\"Cannot load Paypal script!\");\n          this.props.onError();\n        }\n      }\n    }\n  }\n\n  render() {\n    const payment = () => paypal.rest.payment.create(this.props.env, this.props.client, {\n      transactions: [{\n        amount: {\n          total: this.props.total,\n          currency: this.props.currency\n        }\n      }]\n    });\n\n    const onAuthorize = (data, actions) => actions.payment.execute().then(() => {\n      const payment = Object.assign({}, this.props.payment);\n      payment.paid = true;\n      payment.cancelled = false;\n      payment.payerID = data.payerID;\n      payment.paymentID = data.paymentID;\n      payment.paymentToken = data.paymentToken;\n      payment.returnUrl = data.returnUrl;\n      this.props.onSuccess(payment);\n    });\n\n    let ppbtn = \"\";\n\n    if (this.state.showButton) {\n      ppbtn = /*#__PURE__*/React.createElement(paypal.Button.react, {\n        env: this.state.env,\n        client: this.state.client,\n        payment: payment,\n        commit: true,\n        onAuthorize: onAuthorize,\n        onCancel: this.props.onCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    }, ppbtn);\n  }\n\n}\n\nPaypalButton.propTypes = {\n  currency: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  client: PropTypes.object.isRequired\n};\nPaypalButton.defaultProps = {\n  env: \"sandbox\",\n  onSuccess: payment => {\n    console.log(\"The payment was succeeded!\", payment);\n  },\n  onCancel: data => {\n    console.log(\"The payment was cancelled!\", data);\n  },\n  onError: err => {\n    console.log(\"Error loading Paypal script!\", err);\n  }\n};\nexport default scriptLoader(\"https://www.paypalobjects.com/api/checkout.js\")(PaypalButton);","map":{"version":3,"names":["React","ReactDOM","scriptLoader","PropTypes","PaypalButton","Component","constructor","props","window","state","showButton","env","client","sandbox","commit","componentDidMount","isScriptLoaded","isScriptLoadSucceed","setState","componentWillReceiveProps","show","console","log","onError","render","payment","paypal","rest","create","transactions","amount","total","currency","onAuthorize","data","actions","execute","then","Object","assign","paid","cancelled","payerID","paymentID","paymentToken","returnUrl","onSuccess","ppbtn","onCancel","propTypes","string","isRequired","number","object","defaultProps","err"],"sources":["C:/Users/SAI/Downloads/Frontend/Frontend/src/components/pages/PaypalButton.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport scriptLoader from \"react-async-script-loader\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass PaypalButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    window.React = React;\r\n    window.ReactDOM = ReactDOM;\r\n    this.state = {\r\n      showButton: false,\r\n      env: \"sandbox\", // Or 'sandbox'\r\n      client: {\r\n        sandbox:\r\n          \"Af5uiiZODbLimz9utCNI3a3Fwjyll2nk527X4C1KsyhexG1SuHiGMh5fxVWTx_mj-l7lK0bFoYBizsAx\",\r\n        // production: \"xxxxxxxxx\", // production client ID\r\n      },\r\n      commit: true, // Show a 'Pay Now' button\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { isScriptLoaded, isScriptLoadSucceed } = this.props;\r\n    if (isScriptLoaded && isScriptLoadSucceed) {\r\n      this.setState({ showButton: true });\r\n    }\r\n  }\r\n  componentWillReceiveProps({ isScriptLoaded, isScriptLoadSucceed }) {\r\n    if (!this.state.show) {\r\n      if (isScriptLoaded && !this.props.isScriptLoaded) {\r\n        if (isScriptLoadSucceed) {\r\n          this.setState({ showButton: true });\r\n        } else {\r\n          console.log(\"Cannot load Paypal script!\");\r\n          this.props.onError();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const payment = () =>\r\n      paypal.rest.payment.create(this.props.env, this.props.client, {\r\n        transactions: [\r\n          {\r\n            amount: { total: this.props.total, currency: this.props.currency },\r\n          },\r\n        ],\r\n      });\r\n\r\n    const onAuthorize = (data, actions) =>\r\n      actions.payment.execute().then(() => {\r\n        const payment = Object.assign({}, this.props.payment);\r\n        payment.paid = true;\r\n        payment.cancelled = false;\r\n        payment.payerID = data.payerID;\r\n        payment.paymentID = data.paymentID;\r\n        payment.paymentToken = data.paymentToken;\r\n        payment.returnUrl = data.returnUrl;\r\n        this.props.onSuccess(payment);\r\n      });\r\n\r\n    let ppbtn = \"\";\r\n    if (this.state.showButton) {\r\n      ppbtn = (\r\n        <paypal.Button.react\r\n          env={this.state.env}\r\n          client={this.state.client}\r\n          payment={payment}\r\n          commit\r\n          onAuthorize={onAuthorize}\r\n          onCancel={this.props.onCancel}\r\n        />\r\n      );\r\n    }\r\n    return <div>{ppbtn}</div>;\r\n  }\r\n}\r\n\r\nPaypalButton.propTypes = {\r\n  currency: PropTypes.string.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nPaypalButton.defaultProps = {\r\n  env: \"sandbox\",\r\n  onSuccess: (payment) => {\r\n    console.log(\"The payment was succeeded!\", payment);\r\n  },\r\n  onCancel: (data) => {\r\n    console.log(\"The payment was cancelled!\", data);\r\n  },\r\n  onError: (err) => {\r\n    console.log(\"Error loading Paypal script!\", err);\r\n  },\r\n};\r\n\r\nexport default scriptLoader(\"https://www.paypalobjects.com/api/checkout.js\")(\r\n  PaypalButton\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}